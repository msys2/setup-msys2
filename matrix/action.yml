name: Matrix

inputs:
  systems:
    description: 'Space separated list of systems to build and test the tool on.'
    required: false
    type: string
    default: 'msys mingw32 mingw64 ucrt64 clang64 clangarm64'
outputs:
  jobs:
    description: "List of MSYS2 systems to be used in the matrix of other jobs."
    value: ${{ steps.jobs.outputs.jobs }}

runs:
  using: 'composite'
  steps:
    - name: Generate list of jobs
      shell: python
      id: jobs
      env:
        INPUT_SYSTEMS: ${{ inputs.systems }}
      run: |
        import os
        icons = {
          'msys':       'ðŸŸª',
          'mingw32':    'â¬›',
          'mingw64':    'ðŸŸ¦',
          'ucrt64':     'ðŸŸ¨',
          'clang64':    'ðŸŸ§',
          'clangarm64': 'ðŸŸ©',
        }
        jobs = [
            {
              'sys': sys.lower(),
              'icon': icons[sys.lower()],
              'runs-on': 'windows-11-arm' if sys.lower() == 'clangarm64' else 'windows-latest',
            } for sys in os.environ['INPUT_SYSTEMS'].split(' ')
        ]
        with open(os.environ['GITHUB_OUTPUT'], 'a', encoding='utf-8') as h:
          h.write(f"jobs={jobs!s}\n")
